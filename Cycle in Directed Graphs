import java.util.*;
public class Cycledir_Graph {
    public static class Edge{
        int src;
        int dest;

        public Edge(int s, int d){
            this.src=s;
            this.dest=d;
        }
    }
    public static void createGraph(ArrayList<Edge> graph[]){
        for(int i=0;i<graph.length;i++){
            graph[i] = new ArrayList<>();
        }
        graph[0].add(new Edge(0,2));
        graph[1].add(new Edge(1,0));
        graph[2].add(new Edge(2,3));
        graph[3].add(new Edge(3,0));
    }
    public static boolean iscylcedir(ArrayList<Edge> graph[], boolean vis[], int cur, boolean rec[]){
        vis[cur] = true;
        rec[cur] = true;
        for(int i=0;i<graph[cur].size();i++){
            Edge e = graph[cur].get(i);
            if(rec[e.dest]){      //cycle exists
                return true;
            }
            else if(!vis[e.dest]){
                if(iscylcedir(graph, vis, e.dest, rec)){
                    return true;
                }
            }
        }
        rec[cur] = false;
        return false;
    }
    public static void main(String[] args) {
        int V = 4;
        ArrayList<Edge> graph[] = new ArrayList[V];
        createGraph(graph);
        boolean vis[] = new boolean[V];
        for(int i=0;i<V;i++){
            if(!vis[i]){
                boolean res = iscylcedir(graph, new boolean[V], 0, new boolean[V]);
                if(res){
                    System.out.println(res);
                    break;
                }
            }
        }
        
    }
}
